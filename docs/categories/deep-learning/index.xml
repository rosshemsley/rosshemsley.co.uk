<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deep learning on Ross Hemsley</title>
    <link>https://rosshemsley.co.uk/categories/deep-learning/</link>
    <description>Recent content in deep learning on Ross Hemsley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 03 Aug 2020 13:19:31 +0100</lastBuildDate>
    
	<atom:link href="https://rosshemsley.co.uk/categories/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>KISS: Backbones in Pytorch</title>
      <link>https://rosshemsley.co.uk/posts/kiss-backbone-pytorch/</link>
      <pubDate>Mon, 03 Aug 2020 13:19:31 +0100</pubDate>
      
      <guid>https://rosshemsley.co.uk/posts/kiss-backbone-pytorch/</guid>
      <description>Keep It Simple Stupid: CNN Backbones Many modern CNNs (convolutional neural networks) use a backbone to extract feature maps as the first step in their architecture: for example, some flavour of Resnet50.
Helpfully, many of these backbones are implemented for us in torchvision, even with pre-trained models made available. This means we can often write simple code that looks like the following:
1 2 3 4 5 6 7 8 9 10 11 12  from torchvision.</description>
    </item>
    
    <item>
      <title>My Deep Learning Toolchain</title>
      <link>https://rosshemsley.co.uk/posts/deep_learning_toolchain/</link>
      <pubDate>Tue, 24 Sep 2019 20:47:53 +0000</pubDate>
      
      <guid>https://rosshemsley.co.uk/posts/deep_learning_toolchain/</guid>
      <description>Successful model development can be surprisingly dependent on good engineering practices. Despite this, many model implementations scattered about Github are difficult to follow and hard to recreate locally.  But what should a good model look like? I would propose that the gold standard for a model implemented on Github could be:   The dependencies may be installed automatically, using a single command.  I can build the model in a sandbox without polluting with my dev.</description>
    </item>
    
  </channel>
</rss>